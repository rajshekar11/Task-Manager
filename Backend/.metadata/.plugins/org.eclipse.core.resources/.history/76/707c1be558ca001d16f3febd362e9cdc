package com.task.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.task.entity.Task;
import com.task.exception.TaskException;
import com.task.exception.UserException;
import com.task.service.TaskService;

import jakarta.validation.Valid;

@RestController
public class TaskController {

	@Autowired
	private TaskService tser;
	
	@PostMapping("/task")
	public ResponseEntity<Task> addAnewTask(@Valid @RequestBody Task task) throws TaskException{
		Task t=tser.addAnewTask(task);
		return new ResponseEntity<Task>(t,HttpStatus.ACCEPTED);
	}
	
	@GetMapping("/task/{tid}")
	public ResponseEntity<Task> getTaskById(@PathVariable("tid") Integer tid) throws TaskException{
		Task t=tser.getTaskById(tid);
		return new ResponseEntity<Task>(t,HttpStatus.OK);
	}
	
	@PutMapping("/task/{uid}")
	public ResponseEntity<Task> assignAUserToTask(@PathVariable("tid") Integer uid,Integer tid) throws TaskException,UserException{
		
	}
	
	public Task changeStatusOfATask(Integer uid,String status) throws TaskException;
	
	public Task deleteATaskById(Integer uid) throws TaskException;
}
